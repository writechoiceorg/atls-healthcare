openapi: 3.0.1
info:
  title: ATS API Additional Endpoints
  version: v1
servers:
  - url: https://atsapi-dev.azurewebsites.net
paths:
  "/v1/Address/saved/check":
    get:
      operationId: address-saved-check
      summary: Address Save Check
      description: This endpoint allows you to verify whether a given address can be saved in the system. By submitting the address details, the endpoint checks its validity, ensuring that it meets the required standards and formats for future use. 
      tags:
      - Address
      parameters:
      - name: Name
        in: query
        schema:
          type: string
        description: The name of the individual or entity to whom the address belongs.
      - name: AttentionTo
        in: query
        schema:
          type: string
        description: The name of the person to whom attention should be directed at this address.
      - name: Address1
        in: query
        schema:
          type: string
        description: The primary address line for the location.
      - name: Address2
        in: query
        schema:
          type: string
        description: The secondary address line for the location, if applicable.
      - name: City
        in: query
        schema:
          type: string
        description: The city in which the address is located.
      - name: Province
        in: query
        schema:
          type: string
        description: The province or state in which the address is located.
      - name: PostalCode
        in: query
        schema:
          type: string
        description: The postal code or ZIP code for the address.
      - name: Phone
        in: query
        schema:
          type: string
        description: The phone number associated with the address.
      - name: Email
        in: query
        schema:
          type: string
        description: The email address associated with the address.
      responses:
        '200':
          description: Success
  "/v1/Address/validate/residential":
    get:
      operationId: address-validate-residential
      summary: Validate Residential Address
      description: This endpoint validates if the address requires the Residential Delivery accessorial. If it returns `isResidential` as `true`, you should include the Residential Delivery accessorial on any shipments to this address.
      tags:
      - Address
      parameters:
      - name: address1
        in: query
        description: The primary address line for the residential location.
        schema:
          type: string
      - name: postalCode
        in: query
        description: The postal code or ZIP code for the residential address.
        schema:
          type: string
      responses:
        '200':
          description: Success
  # "/v1/Address/validate/postalCode":
  #   get:
  #     operationId: address-validate-postalcode
  #     summary: Validate Address Postal Code
  #     description: This endpoint validates the postal code of a given address to ensure it is accurate and correctly formatted.
  #     tags:
  #     - Address
  #     parameters:
  #     - name: postalCode
  #       in: query
  #       schema:
  #         type: string
  #       description: The postal code or ZIP code to be validated.
  #     - name: province
  #       in: query
  #       schema:
  #         type: string
  #       description: The province or state associated with the postal code.
  #     - name: city
  #       in: query
  #       schema:
  #         type: string
  #       description: The city associated with the postal code.
  #     responses:
  #       '200':
  #         description: Success
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/ValidatePostalCodeResponse"
  #     deprecated: true
  "/v1.1/Address/validate/postalCode":
    get:
      operationId: address-validate-postalcode-v1-1
      summary: Validate Address Postal Code
      description: |
        This endpoint can be used to query valid cities within a postal code or to verify that the provided city, province, and postal code combination is valid. The endpoint offers several validation options:
        
        - If only a province and postal code are provided, it will validate that they match.
        - If a city, province, and postal code are all provided, it will validate that they match.
        - If only a postal code is provided, it will return the list of valid cities within that postal code.

        > ðŸ“˜ Note
        > The response always includes the list of valid cities associated with the postal code.
      tags:
      - Address
      parameters:
      - name: postalCode
        in: query
        schema:
          type: string
        description: The postal code or ZIP code to be validated.
      - name: province
        in: query
        schema:
          type: string
        description: The province or state associated with the postal code.
      - name: city
        in: query
        schema:
          type: string
        description: The city associated with the postal code.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidatePostalCodeResponse"
        '400':
          description: Bad request. Mismatch between the Postal Code and Province.
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/v1.2/Shipments":
    get:
      tags:
      - Shipments
      summary: Get a List of Shipments
      operationId: get-shipments-v1-2
      description: Retrieve a list of shipments based on various filter criteria. You can filter shipments by status, reference numbers, purchase order numbers, or name. Additionally, you can control the pagination of results by specifying the page number and page size, and sort the results by a specific field in either ascending or descending order.
      parameters:
      - name: status
        in: query
        description: Filter shipments by their status.
        schema:
          "$ref": "#/components/schemas/ShipmentStatus"
      - name: reference
        in: query
        description: Filter shipments by reference numbers.
        schema:
          type: array
          items:
            type: string
      - name: purchaseOrder
        in: query
        description: Filter shipments by purchase order number.
        schema:
          type: string
      - name: name
        in: query
        description: Filter shipments by name.
        schema:
          type: string
      - name: PageNumber
        in: query
        description: The page number for pagination.
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        description: The number of items per page for pagination.
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: The field by which to sort the results.
        schema:
          "$ref": "#/components/schemas/SortBy_v1_2"
      - name: order
        in: query
        schema:
          "$ref": "#/components/schemas/OrderAs"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
  "/v1/Shipments/Imports":
    get:
      operationId: shipment-imports
      tags:
      - Shipments
      summary: Get All Shipment Imports
      description: |
        Retrieve a list of all shipment imports. This endpoint allows you to view and manage the imports associated with your shipments. You can sort the results by date using the `DateSortOrder` parameter and control the pagination by specifying the page number and page size.
      parameters:
      - name: DateSortOrder
        in: query
        schema:
          "$ref": "#/components/schemas/OrderAs"
      - name: PaginationQuery.PageNumber
        in: query
        description: The page number for pagination.
        schema:
          type: integer
          format: int32
      - name: PaginationQuery.PageSize
        description: The number of items per page for pagination.
        in: query
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
    post:
      tags:
      - Shipments
      summary: Import Orders or Picklists
      operationId: import-orders-picklists
      description: This endpoint allows you to import orders or picklists by uploading a file. You can choose to validate the file contents before importing by setting the `validateOnly` parameter to true. If you wish to add the imported orders or picklists directly to the continuous manifest, set the `addToContinuousManifest` parameter to true. The file should be uploaded in binary format as part of a multipart form data request.
      parameters:
      - name: validateOnly
        in: query
        description: If true, only validate the orders or picklists without importing.
        schema:
          type: boolean
          default: false
      - name: addToContinuousManifest
        in: query
        description: If true, add the imported orders or picklists to the continuous manifest.
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file containing the orders or picklists to be imported.
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoadOrdersResponse"
  "/v1/Shipments/Imports/{importId}":
    get:
      tags:
      - Shipments
      summary: Get Shipment Import by ID
      operationId: get-shipment-import-by-id
      description: >
        Retrieve detailed information about a specific shipment import using its unique identifier (`importId`).
      parameters:
      - name: importId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: The unique identifier for the shipment import.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetImportByIdResult"
  "/v1/Shipments/Imports/{id}/labels":
    get:
      tags:
      - Shipments
      summary: Get Labels by Import ID
      operationId: get-labels-by-import-id
      description: >
        Retrieve shipping labels for a specific import using its unique identifier (`id`). 
        This endpoint allows you to generate labels in various formats and sizes according to your needs. 
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: The unique identifier for the import.
      - name: type
        in: query
        schema:
          "$ref": "#/components/schemas/LabelType"
        description: The type of label to be generated.
      - name: size
        in: query
        schema:
          "$ref": "#/components/schemas/LabelSize"
        description: The size of the label to be generated.
      - name: invert
        in: query
        schema:
          type: boolean
          default: false
        description: Indicates whether the label should be inverted.
      - name: includeLogo
        in: query
        schema:
          type: boolean
          default: false
        description: Indicates whether the label should include ATS's logo.
      responses:
        '200':
          description: Success
  "/v1/Manifests":
    post:
      operationId: create-manifest
      summary: Create Manifest
      description: This endpoint allows you to create a new manifest, which is a collection of shipments that are grouped together for processing. By submitting a request with the required manifest details, you can organize shipments under a new manifest. 
      tags:
      - Manifests
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpenManifestRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/OpenManifestRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/OpenManifestRequest"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ManifestResponse"
        '409':
          description: Conflict
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    get:
      operationId: get-all-manifests
      summary: Get All Manifests
      description: Retrieve a list of all manifests based on specified criteria. This endpoint allows you to filter the manifests by their status and supports pagination to navigate through large datasets.
      tags:
      - Manifests
      parameters:
      - name: status
        in: query
        schema:
          "$ref": "#/components/schemas/ManifestStatusReq"
      - name: PageNumber
        in: query
        description: The current page number for pagination.
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        description: The number of items to be included on each page for pagination.
        schema:
          type: integer
          format: int32
      - name: _sort
        in: query
        schema:
          "$ref": "#/components/schemas/ManifestSortBy"
      - name: _order
        in: query
        schema:
          "$ref": "#/components/schemas/OrderAs"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ManifestsResponseListPagedResponse"
  "/v1/Manifests/{manifestId}/shipments":
    post:
      summary: Add Shipments to Manifest
      operationId: add-shipments-to-manifest
      description: >
        This endpoint allows you to add shipments to an existing manifest. 
        By specifying the `manifestId` and providing a list of `ShipmentIds`, 
        the shipments are grouped under the specified manifest.
      tags:
      - Manifests
      parameters:
      - name: manifestId
        in: path
        description: The unique identifier for the manifest to which shipments will be added.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ShipmentIds"
          text/json:
            schema:
              "$ref": "#/components/schemas/ShipmentIds"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ShipmentIds"
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    get:
      summary: Get Shipments by Manifest
      operationId: get-shipments-by-manifest
      description: >
        Retrieve all shipments associated with a specific manifest using its unique `manifestId`. 
      tags:
      - Manifests
      parameters:
      - name: manifestId
        in: path
        description: The unique identifier for the manifest.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  # "/v1/Manifests/continuous":
  #   get:
  #     tags:
  #     - Manifests
  #     operationId: get-continuous-manifest
  #     summary: Get Continuous Manifest
  #     description: Gets continuous manifest. Continuous manifest is a manifest that
  #       all shipments are automatically assigned to if not specified otherwise.
  #     responses:
  #       '200':
  #         description: Success
  "/v1/Manifests/{manifestId}":
    get:
      summary: Get Manifest by ID
      operationId: get-manifest-by-id
      description: >
        Retrieve detailed information about a specific manifest using its unique identifier (`manifestId`). 
        This endpoint allows you to access all relevant details about the manifest, including its status, 
        associated shipments, and other metadata.
      tags:
      - Manifests
      parameters:
      - name: manifestId
        in: path
        description: The unique identifier for the manifest.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ManifestResponse"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    # patch:
    #   summary: Close Manifest
    #   operationId: close-manifest
    #   tags:
    #   - Manifests
    #   parameters:
    #   - name: manifestId
    #     in: path
    #     description: The unique identifier for the manifest to be closed.
    #     required: true
    #     schema:
    #       type: integer
    #       format: int32
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           "$ref": "#/components/schemas/UpdateManifestRequest"
    #       text/json:
    #         schema:
    #           "$ref": "#/components/schemas/UpdateManifestRequest"
    #       application/*+json:
    #         schema:
    #           "$ref": "#/components/schemas/UpdateManifestRequest"
    #   responses:
    #     '200':
    #       description: Success
    #       content:
    #         application/json:
    #           schema:
    #             "$ref": "#/components/schemas/ManifestResponse"
    delete:
      operationId: delete-manifest 
      tags:
      - Manifests
      summary: Delete manifest
      description: >-
        Delete a manifest by its unique identifier (`manifestId`). This endpoint allows you to remove a specific manifest from the system.


        > ðŸš§ Warning

        > The **Continuous Manifest** can't be deleted.
      parameters:
      - name: manifestId
        in: path
        description: The unique identifier for the manifest to be deleted.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '204':
          description: Success
  # "/v1/Manifests/{manifestId}/report":
  #   get:
  #     summary: Get Manifest Report
  #     operationId: get-manifest-report
  #     tags:
  #     - Manifests
  #     parameters:
  #     - name: manifestId
  #       in: path
  #       description: The unique identifier for the manifest to generate the report for.
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: Success
  "/v1/Manifests/{manifestId}/export":
    get:
      summary: Export Manifest
      operationId: export-manifest
      description: >
        Export the details of a specific manifest using its unique identifier (`manifestId`). 
        This endpoint allows you to retrieve the manifest's information in a downloadable format.
      tags:
      - Manifests
      parameters:
      - name: manifestId
        in: path
        description: The unique identifier for the manifest to be exported.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/v1/MyAccount/customerAccount":
    get:
      tags:
      - MyAccount
      summary: Get Customer Account Details
      operationId: get-customer-account-details
      description: >
        Retrieve detailed information about the customer's account. 
        This endpoint returns the customer's account details, including personal information, 
        account settings, and other relevant data. 
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyCustomerAccountResponse"
  "/v1/MyAccount/customerAccount/addresses":
    post:
      tags:
      - MyAccount
      summary: Add a new Ship-To Address
      operationId: add-ship-to-address
      description: >
        Add a new shipping address to the customer's account. This endpoint allows customers 
        to create a new "Ship-To" address that can be used for future orders and deliveries. 
        The request body should include the necessary details for the address, such as the 
        recipient's name, address line, city, state, postal code, and country.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerShipAddressResponse"
  "/v1/MyAccount/customerAccount/addresses/{addressId}":
    put:
      tags:
      - MyAccount
      summary: Update a Ship-To Address
      operationId: update-ship-to-address
      description: >
        Update an existing shipping address in the customer's account using its unique identifier (`addressId`). 
        This endpoint allows customers to modify the details of an existing "Ship-To" address.
      parameters:
      - name: addressId
        in: path
        description: The unique identifier of the ship-to address to be updated.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CustomerShipAddressRequest"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerShipAddressResponse"
    delete:
      tags:
      - MyAccount
      summary: Delete Ship-To Address
      operationId: delete-ship-to-address
      description: >
        Remove an existing shipping address from the customer's account using its unique identifier (`addressId`). 
      parameters:
      - name: addressId
        in: path
        description: The unique identifier of the ship-to address to be deleted.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/v1/MyAccount/customerAccount/addresses/import":
    post:
      tags:
      - MyAccount
      summary: Import Addresses
      description: >
        This endpoint allows customers to import multiple shipping addresses into their account by uploading a CSV file. The file should contain the address details in the required format, allowing for bulk addition of "Ship-To" addresses. 
      operationId: import-addresses
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                addressesCsvFile:
                  description: The file containing the addresses to be imported.
                  type: string
                  format: binary
            encoding:
              addressesCsvFile:
                style: form
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerShipAddressResponse"
  "/v1/MyAccount/customerAccount/addresses/export":
    get:
      tags:
      - MyAccount
      summary: Export Addresses
      operationId: export-addresses
      description: >
        This endpoint allows customers to export all of their saved shipping addresses from their account. 
      responses:
        '200':
          description: Success
  "/v1/Picklist":
    post:
      tags:
      - Picklist
      summary: Create a new Picklist
      operationId: create-picklist
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Picklist"
          text/json:
            schema:
              "$ref": "#/components/schemas/Picklist"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Picklist"
      responses:
        '200':
          description: Success
  "/v1/Picklist/{lookupKey}":
    get:
      tags:
      - Picklist
      summary: Get Picklist by Lookup Key
      operationId: get-picklist-by-lookup-key
      parameters:
      - name: lookupKey
        in: path
        description: The key used to look up the picklist.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/v1/PickupRequests":
    get:
      summary: Get All Pickup Requests
      operationId: get-all-pickup-requests
      tags:
      - Pickup Requests
      description: >
        Retrieve a list of all pickup requests within the specified date and time range. 
        This endpoint allows you to filter the pickup requests by specifying a `fromDate` and `toDate`. 
      parameters:
      - name: fromDate
        in: query
        description: The start date and time for filtering pickup requests.
        schema:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00Z'
      - name: toDate
        in: query
        description: The end date and time for filtering pickup requests.
        schema:
          type: string
          format: date-time
          example: '2023-12-31T23:59:59Z'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PickupRequestRes"
    # post:
    #   summary: Create a Pickup Request
    #   operationId: create-pickup-request
    #   tags:
    #   - Pickup Requests
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           "$ref": "#/components/schemas/PickupRequestBody"
    #       text/json:
    #         schema:
    #           "$ref": "#/components/schemas/PickupRequestBody"
    #       application/*+json:
    #         schema:
    #           "$ref": "#/components/schemas/PickupRequestBody"
    #   responses:
    #     '201':
    #       description: Success
    #       content:
    #         application/json:
    #           schema:
    #             "$ref": "#/components/schemas/PickupRequestRes"
  # "/v1/Shipments":
  #   post:
  #     summary: Create a Shipment
  #     operationId: create-shipment
  #     tags:
  #     - Shipments
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             "$ref": "#/components/schemas/CreateShipmentRequestBody"
  #         text/json:
  #           schema:
  #             "$ref": "#/components/schemas/CreateShipmentRequestBody"
  #         application/*+json:
  #           schema:
  #             "$ref": "#/components/schemas/CreateShipmentRequestBody"
  #     responses:
  #       '200':
  #         description: Success
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/ShipmentResponse"
  "/v1/Shipments/{shipmentId}":
    get:
      summary: Get Shipment by ID
      operationId: get-shipment-by-id
      description: >
        Retrieve detailed information about a specific shipment using its unique identifier (`shipmentId`). 
        This endpoint returns all relevant details of the shipment, including its status, associated items, 
        shipping details, and any other pertinent information.
      tags:
      - Shipments
      parameters:
      - name: shipmentId
        in: path
        required: true
        description: The unique identifier for the shipment.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShipmentResponse"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    delete:
      tags:
      - Shipments
      summary: Void a Shipment
      operationId: void-shipment
      description: |
        Cancel a created shipment using its unique identifier (`shipmentId`). This endpoint allows you to void a shipment that is no longer needed or was created in error.

        > ðŸš§ Warning
        > If the shipment has already been manifested, it can no longer be canceled.
      parameters:
      - name: shipmentId
        in: path
        required: true
        description: The unique identifier for the shipment to be voided.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '409':
          description: 'Conflict: Shipment has already been manifested and thus cannot
            be voided.'
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  # "/v1/Shipments/tracking/{trackingNumber}":
  #   get:
  #     summary: Track a shipment by Tracking Number
  #     operationId: track-shipment
  #     tags:
  #     - Shipments
  #     parameters:
  #     - name: trackingNumber
  #       description: The tracking number associated with the shipment.
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: Success
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/ShipmentResponse"
  #       '404':
  #         description: Not Found
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #           application/json:
  #             schema:
  #               type: string
  #           text/json:
  #             schema:
  #               type: string
  "/v1/Shipments/search/wineDirect/{orderNumber}":
    get:
      tags:
      - Shipments
      summary: Get Shipment by WineDirect Order Number
      operationId: get-shipment-by-winedirect-order-number
      description: Retrieve detailed information about a shipment using the WineDirect order number (`orderNumber`). 
      parameters:
      - name: orderNumber
        in: path
        required: true
        description: The order number associated with the WineDirect shipment.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShipmentResponse"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  # "/v1/Shipments/label":
  #   get:
  #     tags:
  #     - Shipments
  #     summary: Get Shipment Labels
  #     operationId: get-shipment-labels
  #     description: >-
  #       Get shipment label by `shipmentId` or `trackingNumber`. 

        
  #       If `trackingNumber` includes the package number ('8000...1-1'), then the label for the individual package is returned. Otherwise labels for all packages in the shipment are returned. 
        
        
  #       If `shipmentId` is provided, then the label(s) for the shipment (including all packages) is returned.
  #     parameters:
  #     - name: trackingNumber
  #       in: query
  #       schema:
  #         type: string
  #       description: The tracking number for the shipment. If it includes the package number, the label for the individual package is returned.
  #     - name: shipmentId
  #       in: query
  #       schema:
  #         type: integer
  #         format: int32
  #       description: The unique identifier for the shipment. If provided, the labels for the shipment (including all packages) are returned.
  #     - name: type
  #       in: query
  #       schema:
  #         "$ref": "#/components/schemas/LabelType"
  #       description: The type of label to be generated.
  #     - name: size
  #       in: query
  #       schema:
  #         "$ref": "#/components/schemas/LabelSize"
  #       description: The size of the label to be generated.
  #     - name: invert
  #       in: query
  #       schema:
  #         type: boolean
  #         default: false
  #       description: Indicates whether the label should be inverted.
  #     - name: includeLogo
  #       in: query
  #       schema:
  #         type: boolean
  #         default: false
  #       description: Indicates whether the label should include ATS's logo.
  #     responses:
  #       '200':
  #         description: Returns ZPL string by default, otherwise PDF string binary
  #           if `type=pdf`
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #       '404':
  #         description: Not Found
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/ProblemDetails"
  # "/v1/Shipments/{shipmentId}/label":
  #   get:
  #     tags:
  #     - Shipments
  #     summary: Get shipment label by Shipment ID
  #     operationId: get-shipment-labels-by-shipment-id
  #     parameters:
  #     - name: shipmentId
  #       in: path
  #       description: The unique identifier for the shipment.
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #     - name: Type
  #       in: query
  #       description: The format of the label to be generated.
  #       schema:
  #         "$ref": "#/components/schemas/LabelFormat"
  #     - name: Size
  #       in: query
  #       description: The size of the label to be generated.
  #       schema:
  #         "$ref": "#/components/schemas/LabelSize1"
  #     - name: Invert
  #       in: query
  #       schema:
  #         type: boolean
  #         description: Indicates whether the label should be inverted.
  #     - name: IncludeLogo
  #       in: query
  #       schema:
  #         type: boolean
  #         description: Indicates whether the label should include ATS's logo.
  #     responses:
  #       '200':
  #         description: Returns ZPL string by default, otherwise PDF string binary
  #           if `type=pdf`
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #       '404':
  #         description: Not Found
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/ProblemDetails"
  "/v1/Shipments/service":
    post:
      tags:
      - Shipments
      summary: Get Available Services
      description: Retrieve a list of available shipping services based on the provided shipment details. This endpoint allows you to determine which services are available for a particular shipment, considering factors such as origin, destination, package weight, and dimensions. 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetAvailableServicesRequestBody"
          text/json:
            schema:
              "$ref": "#/components/schemas/GetAvailableServicesRequestBody"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/GetAvailableServicesRequestBody"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AvailableServiceResponse"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/v1/Shipments/rate":
    post:
      tags:
      - Shipments
      summary: Rate Shipment
      operationId: rate-shipment
      description: >
        Calculate and retrieve shipping rates based on the provided shipment details. 
        This endpoint allows you to obtain pricing information for a shipment, 
        considering factors such as origin, destination, package weight, dimensions, 
        and the selected shipping service.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RateShipmentRequestBody"
          text/json:
            schema:
              "$ref": "#/components/schemas/RateShipmentRequestBody"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RateShipmentRequestBody"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RateResponse"
components:
  schemas:
    AccessorialDetails:
      type: object
      properties:
        timeRelease:
          "$ref": "#/components/schemas/TimeReleaseDetails"
          description: Details about the time release for the shipment.
        appointment:
          "$ref": "#/components/schemas/AppointmentDetails"
          description: Details about the appointment for the shipment.
        freightInsurance:
          "$ref": "#/components/schemas/FreightInsuranceDetails"
          description: Details about the freight insurance for the shipment.
        poDueDate:
          type: string
          format: date
          nullable: true
          description: The due date for the purchase order.
      additionalProperties: false
    AccessorialDetailsRes:
      description: The accessorials details. If providing accessorial detail, the
        corresponding accessorial code must be included in the `accessorials` list.
      type: object
      properties:
        timeRelease:
          "$ref": "#/components/schemas/TimeReleaseDetailRes"
        appointment:
          "$ref": "#/components/schemas/AppointmentDetailRes"
        freightInsurance:
          "$ref": "#/components/schemas/FreightInsuranceDetailRes"
        poDueDate:
          type: string
          format: date
          nullable: true
      additionalProperties: false
    AccessorialsRes:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          nullable: true
          description: A list of accessorial values.
        labels:
          type: array
          items:
            type: string
          nullable: true
          description: A list of labels for the accessorial values.
        details:
          "$ref": "#/components/schemas/AccessorialDetailsRes"
          description: Detailed information about the accessorial services.
      additionalProperties: false
    AdditionalChargeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        hasFlatCharge:
          type: boolean
        flatCharge:
          type: number
          format: double
          nullable: true
        variableCharge:
          type: number
          format: double
          nullable: true
        isEnforced:
          type: boolean
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        isPartiallyAvailable:
          type: boolean
          nullable: true
        partialAvailabilityDetails:
          type: string
          nullable: true
      additionalProperties: false
    Address:
      type: object
      properties:
        name:
          maxLength: 35
          minLength: 0
          type: string
          nullable: true
          description: The name of the individual or entity associated with the address.
        attentionTo:
          type: string
          nullable: true
          description: The name of the person to whom attention should be directed at this address.
        address1:
          type: string
          nullable: true
          description: The primary address line for the location.
        address2:
          type: string
          nullable: true
          description: The secondary address line for the location, if applicable.
        city:
          type: string
          nullable: true
          description: The city in which the address is located.
        province:
          type: string
          nullable: true
          description: The province or state in which the address is located.
        country:
          type: string
          nullable: true
          description: The country in which the address is located.
        postalCode:
          type: string
          nullable: true
          description: The postal code or ZIP code for the address.
        isResidential:
          type: boolean
          nullable: true
          description: Indicates if the address is residential.
      additionalProperties: false

    AddressFieldConfigRes:
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/FieldConfigWithOutRequiredRes"
        attentionTo:
          "$ref": "#/components/schemas/FieldConfigRes"
        address1:
          "$ref": "#/components/schemas/FieldConfigWithOutRequiredRes"
        address2:
          "$ref": "#/components/schemas/FieldConfigRes"
      additionalProperties: false
    AddressRequest:
      required:
      - address1
      - city
      - country
      - name
      - postalCode
      - province
      type: object
      properties:
        name:
          maxLength: 35
          type: string
          example: John Doe
          description: The name of the individual or entity associated with the address.
        attentionTo:
          maxLength: 35
          example: Jane Doe
          type: string
          nullable: true
          description: The name of the person to whom attention should be directed at this address.
        address1:
          maxLength: 35
          example: 150-18279 Blundell Rd
          type: string
          description: The primary address line for the location.
        address2:
          maxLength: 35
          type: string
          nullable: true
          description: The secondary address line for the location, if applicable.
        city:
          maxLength: 35
          example: Vancouver
          type: string
          description: The city in which the address is located.
        province:
          maxLength: 2
          example: BC
          type: string
          description: >-
            Two character abbreviation. 
            
            <small>Example: 'BC' for British Columbia.</small>
        postalCode:
          maxLength: 7
          minLength: 6
          example: V6W1L8
          type: string
          description: The postal code or ZIP code for the address.
        country:
          maxLength: 2
          type: string
          example: CA
          description: 'Country abbreviation. Accepted value: `CA` for Canada.'
        isResidential:
          type: boolean
          nullable: true
          example: false
          description: Indicates if the address is residential.
      additionalProperties: false
    AddressType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        attentionTo:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        province:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        isResidential:
          type: boolean
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    AppointmentDetailRes:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/AppointmentTypeRes"
        confirmationCode:
          type: string
          nullable: true
          description: The confirmation code for the appointment.
        date:
          type: string
          format: date-time
          nullable: true
          description: The date of the appointment.
        time:
          type: string
          nullable: true
          description: The time of the appointment.
      additionalProperties: false
    AppointmentDetails:
      required:
      - type
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/AppointmentTypeReq"
          description: The type of appointment associated with the shipment.
        date:
          type: string
          format: date-time
          nullable: true
          description: The date of the appointment.
        time:
          type: string
          nullable: true
          description: The time of the appointment.
        confirmationCode:
          type: string
          nullable: true
          description: The confirmation code for the appointment.
      additionalProperties: false
    AppointmentType:
      enum:
      - preBooked
      - request
      type: string
      description: The type of appointment, either `preBooked` or `request`.
    AppointmentTypeReq:
      type: object
      properties:
        value:
          "$ref": "#/components/schemas/AppointmentType"
        description:
          type: string
          nullable: true
          description: A description of the appointment type.
      additionalProperties: false
    AppointmentTypeRes:
      type: object
      description: The type of appointment associated with the shipment.
      properties:
        value:
          "$ref": "#/components/schemas/AppointmentType"
        description:
          type: string
          nullable: true
          description: A description of the appointment type.
      additionalProperties: false
    AvailableServiceResponse:
      type: object
      properties:
        availableServices:
          type: array
          items:
            "$ref": "#/components/schemas/ServicesByDateResponse"
          nullable: true
        availableAccessorials:
          type: array
          items:
            "$ref": "#/components/schemas/AdditionalChargeResponse"
          nullable: true
      additionalProperties: false
    ConfigRes:
      type: object
      properties:
        shipToAddress:
          "$ref": "#/components/schemas/ShipToAddressConfigRes"
          description: Configuration settings for the ship-to address.
        externalSystem:
          "$ref": "#/components/schemas/MyExternalSystemRes"
          description: Configuration settings for the external system.
        hideRate:
          type: boolean
          description: Indicates whether to hide the rate information.
      additionalProperties: false
    ContainerTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the container type.
        name:
          type: string
          nullable: true
          description: The name of the container type.
        length:
          type: integer
          format: int32
          description: The length of the container type.
        width:
          type: integer
          format: int32
          description: The width of the container type.
        height:
          type: integer
          format: int32
          description: The height of the container type.
        weight:
          type: number
          format: double
          description: The weight of the container type.
        isNonStackable:
          type: boolean
          nullable: true
          description: Indicates if the container type is non-stackable.
      additionalProperties: false
    CreateShipmentRequestBody:
      required:
      - address
      - docketCode
      - pieces
      - serviceCode
      - shipDate
      - totalWeight
      type: object
      properties:
        docketCode:
          maxLength: 24
          type: string
          description: The code associated with the shipment docket. You can retrieve your docket codes with the [Get Customer Account Details](/reference/get-customer-account-details) endpoint.
        accountId:
          type: integer
          description: This is the saved address ID in the ATS System used to associate shipments to a saved address.
          format: int32
          nullable: true
          deprecated: true
        accountCode:
          maxLength: 24
          type: string
          description: This is the Shipper's Consignee ID that the Shipper would use to refer to this Consignee.
          nullable: true
          deprecated: true
        addressId:
          type: integer
          description: This is the saved address ID in the ATS System used to associate shipments to a saved address.
          format: int32
          nullable: true
        consigneeCode:
          maxLength: 24
          type: string
          description: This is the Shipper's Consignee ID that the Shipper would use to refer to this Consignee.
          nullable: true
        address:
          "$ref": "#/components/schemas/AddressRequest"
          description: The address details for the shipment.
        phone:
          maxLength: 24
          type: string
          nullable: true
          description: The phone number associated with the shipment.
        email:
          maxLength: 50
          type: string
          nullable: true
          description: The email address associated with the shipment.
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
        totalWeight:
          type: number
          format: double
          description: The total weight of the shipment.
        isPallet:
          type: boolean
          example: false
          description: Indicates if the shipment is palletized.
        saidToContain:
          type: integer
          format: int32
          nullable: true
          description: The number of items on the pallet.
        instructions:
          maxLength: 35
          type: string
          nullable: true
          description: Special instructions for the shipment.
        descriptionOfGoods:
          maxLength: 35
          type: string
          nullable: true
          description: A description of the goods in the shipment.
        packages:
          type: array
          items:
            "$ref": "#/components/schemas/PackageRequest"
          nullable: true
          description: A list of packages included in the shipment.
        shipDate:
          type: string
          format: date-time
          description: The date and time when the shipment is to be shipped.
        accessorials:
          type: array
          items:
            type: string
            enum:
              - TC  # Ambient (Temperature Track)
              - FR  # Cold Chain Keep Moving
              - HS  # Heated Service
              - KC  # Keep Cool Service
              - PT  # Appointment
              - PD  # PO Expiration/Due Date
              - TR  # Time Release
              - BD  # Backdoor Receipts
              - CS  # Chain of Signature
              - DG  # Dangerous Goods
              - PO  # Hard Copy POD Requested
              - HD  # Residential Delivery
              - TG  # Tailgate
              - NS  # No Signature Required
              - IS  # Freight Insurance
            x-enumDescriptions:
              TC: "Ambient (Temperature Track): Ensures that the shipment travels within 15Â° - 25Â° C. Available to selected areas only."
              FR: "Cold Chain Keep Moving: Special handling procedures to maintain the desired temperature range during transit."
              HS: "Heated Service: Ensures the shipment is transported in a heated vehicle and will not freeze. Available from Oct 15 to Apr 15."
              KC: "Keep Cool Service: Refrigerated (do not melt) service offered between Apr 16 and Oct 14."
              PT: "Appointment: Scheduled delivery at a specified time."
              PD: "PO Expiration/Due Date: Delivery to be made by the expiration date of the purchase order."
              TR: "Time Release: Delivery to be made on, before, after, or between specific dates."
              BD: "Backdoor Receipts: Occasionally required by certain consignees to confirm delivery via a backdoor receipt."
              CS: "Chain of Signature: Ensures signatures at each transfer point for documentation purposes."
              DG: "Dangerous Goods: Handles dangerous goods provided they comply with all provisions of the I.A.T.A. regulations."
              PO: "Hard Copy POD Requested: Physical proof of delivery documentation requested."
              HD: "Residential Delivery: Delivery service to residential addresses, including home-based businesses."
              TG: "Tailgate: Use of a tailgate lift for loading/unloading heavy items."
              NS: "No Signature Required: Delivery can be completed without obtaining a signature."
              IS: "Freight Insurance: Insurance coverage for goods during transit."
          description: The accessorials requested for the shipment. Should be a list of two character codes. Refer to the [Accessorials](ref:accessorials) reference page for a full list of available accessorials.
          nullable: true
        accessorialDetails:
          "$ref": "#/components/schemas/AccessorialDetails"
          description: Detailed information about the requested accessorial services.
        references:
          type: array
          description: A list of references to be associated with the shipment. Refer to the [Shipment Reference Types](ref:shipment-reference-types) page for a reference of possible values.
          items:
            "$ref": "#/components/schemas/ShipmentReference"
          nullable: true
        serviceCode:
          maxLength: 2
          type: string
          enum:
            - A9
            - A1
            - AN
            - A3
            - G9
            - G1
            - GN
            - GE
          x-enumDescriptions:
            A9: Air By 9:00 AM
            A1: Air By 10:00 AM
            AN: Air By Noon
            A3: Air By 3:00 PM
            G9: Ground By 9:00 AM
            G1: Ground By 10:00 AM
            GN: Ground by Noon
            GE: Ground Expedited (ATS Standard Delivery option)
          description: The service code for the shipment. Needs to be one of the two character codes found on the [Service Codes](service-codes) reference page.
        source:
          "$ref": "#/components/schemas/Source"
          description: The source details for the shipment.
        groupBy:
          maxLength: 50
          type: string
          description: A user-defined free form field used to group/consolidate shipments. If defined, shipment will consolidate based on this field.
          nullable: true
        paymentTerm:
          "$ref": "#/components/schemas/PaymentTermsClass"
          description: The payment terms for the shipment.
        paymentAccount:
          type: integer
          format: int32
          nullable: true
          description: Required when PaymentTerm is Collect. Ignored otherwise.
      additionalProperties: false
    CustomerShipAddressRequest:
      required:
      - address
      type: object
      properties:
        lookupCode:
          type: string
          nullable: true
          description: The lookup code associated with the ship-to address.
        address:
          "$ref": "#/components/schemas/AddressRequest"
          description: The address details for the ship-to address.
        phone:
          type: string
          nullable: true
          description: The phone number associated with the ship-to address.
        email:
          type: string
          nullable: true
          description: The email address associated with the ship-to address.
        instructions:
          type: string
          nullable: true
          description: Special instructions for the ship-to address.
      additionalProperties: false
    CustomerShipAddressResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the ship-to address.
        lookupCode:
          type: string
          nullable: true
          description: The lookup code associated with the ship-to address.
        address:
          "$ref": "#/components/schemas/Address"
          description: The address details for the ship-to address.
        phone:
          type: string
          nullable: true
          description: The phone number associated with the ship-to address.
        email:
          type: string
          nullable: true
          description: The email address associated with the ship-to address.
        instructions:
          type: string
          nullable: true
          description: Special instructions for the ship-to address.
      additionalProperties: false
    CustomerShipmentReferenceResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the shipment reference.
        prioritySequence:
          type: integer
          format: int32
          nullable: true
          description: The priority sequence of the shipment reference.
        isRequired:
          type: boolean
          nullable: true
          description: Indicates if the shipment reference is required.
        shortName:
          type: string
          nullable: true
          description: The short name of the shipment reference.
        longName:
          type: string
          nullable: true
          description: The long name of the shipment reference.
        fieldValidationRegex:
          type: string
          nullable: true
          description: The regular expression used for field validation.
        fieldMinLength:
          type: integer
          format: int32
          nullable: true
          description: The minimum length of the field value.
        fieldMaxLength:
          type: integer
          format: int32
          nullable: true
          description: The maximum length of the field value.
        fieldType:
          type: string
          nullable: true
          description: The type of the field.
        hasStrictFieldValidation:
          type: boolean
          nullable: true
          description: Indicates if strict field validation is applied.
      additionalProperties: false
    Destination:
      type: object
      description: Details of the destination address where the shipment is sent to.
      properties:
        name:
          type: string
          example: John Doe
          nullable: true
          description: The name of the individual or entity at the destination address.
        attentionTo:
          type: string
          example: Jane Doe
          nullable: true
          description: The name of the person to whom attention should be directed at the destination address.
        address1:
          type: string
          example: 150-18279 Blundell Rd
          nullable: true
          description: The primary address line for the destination location.
        address2:
          type: string
          nullable: true
          description: The secondary address line for the destination location, if applicable.
        city:
          type: string
          example: Vancouver
          nullable: true
          description: The city in which the destination address is located.
        province:
          type: string
          example: BC
          nullable: true
          description: The province or state in which the destination address is located.
        country:
          type: string
          nullable: true
          example: CA
          description: The country in which the destination address is located.
        postalCode:
          type: string
          example: V6W1L8
          nullable: true
          description: The postal code or ZIP code for the destination address.
        isResidential:
          type: boolean
          nullable: true
          description: Indicates if the destination address is residential.
        phone:
          type: string
          example: '123-456-7890'
          nullable: true
          description: The phone number associated with the destination address.
        email:
          type: string
          example: john.doe@ats.ca
          nullable: true
          description: The email address associated with the destination address.
      additionalProperties: false
    FieldConfigRes:
      type: object
      properties:
        min:
          type: integer
          format: int32
          nullable: true
          description: The minimum value or length allowed for the field.
        max:
          type: integer
          format: int32
          nullable: true
          description: The maximum value or length allowed for the field.
        required:
          type: boolean
          nullable: true
          description: Indicates if the field is required.
      additionalProperties: false
    FieldConfigsRes:
      type: object
      description: Configuration settings for the address fields.
      properties:
        lookupCode:
          description: Configuration for the lookup code field.
          "$ref": "#/components/schemas/FieldConfigRes"
        address:
          "$ref": "#/components/schemas/AddressFieldConfigRes"
        phone:
          "$ref": "#/components/schemas/FieldConfigRes"
        email:
          "$ref": "#/components/schemas/FieldConfigRes"
      additionalProperties: false
    FieldConfigWithOutRequiredRes:
      type: object
      properties:
        min:
          type: integer
          format: int32
          description: The minimum value or length allowed for the field.
          nullable: true
        max:
          type: integer
          format: int32
          description: The maximum value or length allowed for the field.
          nullable: true
      additionalProperties: false
    FreightInsuranceDetailRes:
      type: object
      properties:
        declaredValue:
          description: The declared value of the freight for insurance purposes.
          type: number
          format: double
      additionalProperties: false
    FreightInsuranceDetails:
      type: object
      properties:
        declaredValue:
          type: number
          format: double
          description: The declared value of the freight for insurance purposes.
      additionalProperties: false
    GetAvailableServicesRequestBody:
      required:
      - destinationPostalCode
      - pieces
      - shipDate
      - totalWeight
      type: object
      properties:
        docketCode:
          type: string
          nullable: true
          description: The code associated with the shipment docket.
        shipDate:
          type: string
          format: date-time
          description: The date and time when the shipment is to be shipped.
        destinationPostalCode:
          type: string
          description: The postal code or ZIP code of the shipment's destination.
        originPostalCode:
          type: string
          description: The postal code or ZIP code of the shipment's origin. If not provided, the account's postal code is used, and the shipment is considered an outbound shipment.
          nullable: true
        totalWeight:
          type: number
          format: double
          description: The total weight of the shipment.
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
        packages:
          type: array
          items:
            "$ref": "#/components/schemas/PackageRequest"
          nullable: true
        isPallet:
          type: boolean
          description: Indicates if the shipment is palletized.
      additionalProperties: false
    GetImportByIdResult:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the import.
        dateImported:
          type: string
          format: date-time
          description: The date and time when the import was created.
        shipments:
          type: array
          items:
            "$ref": "#/components/schemas/GetImportByIdShipment"
          nullable: true
          description: A list of shipments associated with the import.
      additionalProperties: false
    GetImportByIdShipment:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the shipment.
        serviceCode:
          type: string
          nullable: true
          description: The code for the type of service used for the shipment.
        serviceText:
          type: string
          nullable: true
          description: A description of the type of service used for the shipment.
        address:
          "$ref": "#/components/schemas/AddressRequest"
          description: The address details for the shipment.
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
        totalWeight:
          type: number
          format: double
          description: The total weight of the shipment.
        shipDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the shipment was shipped.
        status:
          "$ref": "#/components/schemas/ShipmentStatus"
          description: The current status of the shipment.
        trackingNumber:
          type: string
          nullable: true
          description: The tracking number for the shipment.
      additionalProperties: false
    GroupedServiceResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/ShipmentServiceType"
        isEnforced:
          type: boolean
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        title:
          type: string
          nullable: true
        subTitle:
          type: string
          nullable: true
        expectedFreightCharge:
          type: number
          format: double
      additionalProperties: false
    LabelFormat:
      enum:
      - pdf
      - zpl
      - tpcl
      - zplReturn
      x-enumDescriptions:
        pdf: "Label in a PDF Document"
        zpl: "Label in Zebra Programming Language (ZPL)"
        TPCL: "Label in TEC Printer Control Language (TPCL)"
        zplReturn: "Special \"Return\" label in Zebra Programming Language (ZPL)"
      type: string
    LabelSize:
      enum:
      - fourByFour
      - letter
      - fourBySix
      type: string
      x-enumDescriptions:
        fourByfour: "4\" by 4\" label size (Suitable for label printers)"
        letter: "Letter (US) 8.5\" by 11\" (Suitable for plain paper)"
        fourBysix: "4\" by 6\" label size (Suitable for label printers)"
    LabelSize1:
      enum:
      - fourByFour
      - letter
      - fourBySix
      x-enumDescriptions:
        fourByfour: "4\" by 4\" label size (Suitable for label printers)"
        letter: "Letter (US) 8.5\" by 11\" (Suitable for plain paper)"
        fourBysix: "4\" by 6\" label size (Suitable for label printers)"
      type: string
    LabelType:
      enum:
      - pdf
      - zpl
      - tpcl
      - zplReturn
      type: string
      x-enumDescriptions:
        pdf: "Label in a PDF Document"
        zpl: "Label in Zebra Programming Language (ZPL)"
        TPCL: "Label in TEC Printer Control Language (TPCL)"
        zplReturn: "Special \"Return\" label in Zebra Programming Language (ZPL)"
    LoadOrdersResponse:
      type: object
      properties:
        importId:
          type: integer
          format: int32
          description: The unique identifier for the import operation.
        shipments:
          type: array
          description: The list of shipments imported during the operation.
          items:
            "$ref": "#/components/schemas/ShipmentResponse"
          nullable: true
      additionalProperties: false
    ManifestResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the manifest.
        dateCreated:
          type: string
          format: date-time
          description: The date and time when the manifest was created.
        dateClosed:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the manifest was closed, if applicable.
        name:
          type: string
          nullable: true
          description: The name of the manifest.
        status:
          "$ref": "#/components/schemas/ManifestStatusReq"
          description: The current status of the manifest.
        pickupDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the pickup is scheduled.
        door:
          type: string
          nullable: true
          description: The door number where the pickup will occur.
        trailerNumber:
          type: string
          nullable: true
          description: The trailer number associated with the manifest.
        shipmentsAssigned:
          type: integer
          format: int32
          description: The number of shipments assigned to the manifest.
        shipments:
          type: array
          items:
            "$ref": "#/components/schemas/ShipmentResponse"
          nullable: true
          description: A list of shipments associated with the manifest.
      additionalProperties: false
    ManifestSortBy:
      enum:
      - dateClosed
      type: string
      description: The field by which to sort the manifests. Currently, sorting by the date the manifest was closed is supported.
    ManifestsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the manifest.
        dateCreated:
          type: string
          format: date-time
          description: The date and time when the manifest was created.
        dateClosed:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the manifest was closed, if applicable.
        name:
          type: string
          nullable: true
          description: The name of the manifest.
        status:
          "$ref": "#/components/schemas/ManifestStatusRes"
          description: The current status of the manifest.
        pickupDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the pickup is scheduled.
        door:
          type: string
          nullable: true
          description: The door number where the pickup will occur.
        trailerNumber:
          type: string
          nullable: true
          description: The trailer number associated with the manifest.
        shipmentsAssigned:
          type: integer
          format: int32
          description: The number of shipments assigned to the manifest.
        isContinuousType:
          type: boolean
          description: Indicates if the manifest is of continuous type.
      additionalProperties: false
    ManifestsResponseListPagedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/ManifestsResponse"
          nullable: true
          description: The list of manifests returned in the response.
        pageNumber:
          type: integer
          format: int32
          nullable: true
          description: The current page number in the pagination.
        pageSize:
          type: integer
          format: int32
          nullable: true
          description: The number of items per page in the pagination.
        pageCount:
          type: integer
          format: int32
          description: The total number of pages in the result set.
        totalItemCount:
          type: integer
          format: int32
          description: The total number of items in the result set.
        isFirstPage:
          type: boolean
          description: Indicates if the current page is the first page.
        isLastPage:
          type: boolean
          description: Indicates if the current page is the last page.
        hasNextPage:
          type: boolean
          description: Indicates if there is a next page available.
        hasPreviousPage:
          type: boolean
          description: Indicates if there is a previous page available.
      additionalProperties: false
    ManifestStatusRes:
      enum:
      - open
      - closed
      type: string
      description: The status of the manifest, indicating whether it is open or closed.
    ManifestStatusReq:
      enum:
      - open
      - closed
      type: string
      description: The status of the manifest, indicating whether to open or close it.
    Model:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the model.
        dateImported:
          type: string
          format: date-time
          description: The date and time when the model was imported.
        shipmentCount:
          type: integer
          format: int32
          description: The number of shipments associated with the model.
      additionalProperties: false
    MyCustomerAccountResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the customer account.
        name:
          type: string
          nullable: true
          description: The name of the customer account.
        email:
          type: string
          nullable: true
          description: The email address associated with the customer account.
        address:
          "$ref": "#/components/schemas/Address"
          description: The address details for the customer account.
        dockets:
          type: array
          items:
            "$ref": "#/components/schemas/MyDocketResponse"
          nullable: true
          description: A list of dockets associated with the customer account.
        shipToAddresses:
          type: array
          items:
            "$ref": "#/components/schemas/CustomerShipAddressResponse"
          nullable: true
          description: A list of ship-to addresses for the customer account.
        containerTypes:
          type: array
          items:
            "$ref": "#/components/schemas/ContainerTypeResponse"
          nullable: true
          description: A list of container types available for the customer account.
        availableReferences:
          type: array
          items:
            "$ref": "#/components/schemas/CustomerShipmentReferenceResponse"
          nullable: true
          description: A list of available shipment references for the customer account.
        labelTemplate:
          type: string
          nullable: true
          description: The label template used for the customer account.
        config:
          "$ref": "#/components/schemas/ConfigRes"
          description: Configuration settings for the customer account.
        isReturnAccount:
          type: boolean
          description: Indicates if the account is a return account.
      additionalProperties: false
    MyDocketResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the docket.
        code:
          type: string
          nullable: true
          description: The code associated with the docket.
        description:
          type: string
          nullable: true
          description: A description of the docket.
        isDefault:
          type: boolean
          description: Indicates if the docket is the default docket.
      additionalProperties: false
    MyExternalSystemRes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    OpenManifestRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the manifest.
        pickupDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the pickup is scheduled.
        door:
          type: string
          nullable: true
          description: The door number where the pickup will occur.
        trailerNumber:
          type: string
          nullable: true
          description: The trailer number associated with the manifest.
      additionalProperties: false
    OrderAs:
      enum:
      - asc
      - desc
      type: string
      description: The order in which dates should be sorted (ascending or descending).
    Origin:
      description: Details of the origin address where the shipment is sent from.
      type: object
      properties:
        name:
          type: string
          nullable: true
          example: "ATS Demo 2"
          description: The name of the individual or entity at the origin address.
        attentionTo:
          type: string
          nullable: true
          description: The name of the person to whom attention should be directed at the origin address.
        address1:
          type: string
          example: 100 Vaughan Valley Blvd
          nullable: true
          description: The primary address line for the origin location.
        address2:
          type: string
          nullable: true
          description: The secondary address line for the origin location, if applicable.
        city:
          type: string
          example: Vaughan
          nullable: true
          description: The city in which the origin address is located.
        province:
          type: string
          example: 'ON'
          nullable: true
          description: The province or state in which the origin address is located.
        country:
          type: string
          example: CA
          nullable: true
          description: The country in which the origin address is located.
        postalCode:
          type: string
          example: L4H3C5
          nullable: true
          description: The postal code or ZIP code for the origin address.
        isResidential:
          type: boolean
          nullable: true
          description: Indicates if the origin address is residential.
        phone:
          type: string
          nullable: true
          example: "123-456-7890"
          description: The phone number associated with the origin address.
        email:
          type: string
          nullable: true
          example: acs-demo2@ats.ca
          description: The email address associated with the origin address.
      additionalProperties: false
    PackageRequest:
      description: A list of packages included in the shipment.
      type: object
      properties:
        weight:
          type: number
          format: double
          description: The weight of the package.
        width:
          type: number
          format: double
          description: The width of the package.
        length:
          type: number
          format: double
          description: The length of the package.
        height:
          type: number
          format: double
          description: The height of the package.
        isNonStackable:
          type: boolean
          nullable: true
          description: Indicates if the package is non-stackable.
      additionalProperties: false
    PackageResponse:
      type: object
      properties:
        cartonId:
          type: integer
          format: int32
          description: The unique identifier for the carton.
        containerTypeId:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the type of container.
        weight:
          type: number
          format: double
          nullable: true
          description: The weight of the package.
        width:
          type: number
          format: double
          nullable: true
          description: The width of the package.
        length:
          type: number
          format: double
          nullable: true
          description: The length of the package.
        height:
          type: number
          format: double
          nullable: true
          description: The height of the package.
        isNonStackable:
          type: boolean
          nullable: true
          description: Indicates if the package is non-stackable.
        trackingNumber:
          type: string
          nullable: true
          example: 800014422-1
          description: The tracking number for the package.
      additionalProperties: false
    Payment:
      enum:
      - prepaid
      - collect
      type: string
    PaymentTermsClass:
      enum:
      - prepaid
      - collect
      type: string
      description: The payment terms for the shipment, either prepaid or collect.
    Picklist:
      required:
      - lookupKey
      type: object
      properties:
        lookupKey:
          type: string
          description: The key used to look up the picklist.
        consigneeCode:
          type: string
          nullable: true
          description: The code for the consignee associated with the picklist.
        address:
          "$ref": "#/components/schemas/AddressType"
          description: The address details for the picklist.
        phone:
          type: string
          nullable: true
          description: The phone number associated with the picklist.
        email:
          type: string
          nullable: true
          description: The email address associated with the picklist.
        pieces:
          type: integer
          format: int32
          nullable: true
          description: The number of pieces in the picklist.
        totalWeight:
          type: number
          format: double
          nullable: true
          description: The total weight of the picklist.
        isPallet:
          type: boolean
          nullable: true
          description: Indicates if the picklist is palletized.
        saidToContain:
          type: integer
          format: int32
          nullable: true
          description: The number of items said to be contained in the picklist.
        instructions:
          type: string
          nullable: true
          description: Special instructions for the picklist.
        descriptionOfGoods:
          type: string
          nullable: true
          description: A description of the goods in the picklist.
        paymentTerm:
          "$ref": "#/components/schemas/Payment"
          description: The payment terms for the picklist, either prepaid or collect.
        paymentAccount:
          type: integer
          format: int32
          nullable: true
          description: The account number for payment associated with the picklist.
        ref:
          type: string
          nullable: true
          description: A reference number for the picklist.
        po:
          type: string
          nullable: true
          description: The purchase order number associated with the picklist.
      additionalProperties: false
    PickupRequestBody:
      required:
      - closingTime
      - pickupTime
      - pieces
      - weight
      type: object
      properties:
        pickupTime:
          type: string
          example: '0700'
          description: >-
            The time the pickup will be available for the driver. In 4-digit military time format.

            <small>Example: 5:00 PM time becomes 1700 in military format.</small>
        closingTime:
          type: string
          example: '1700'
          description: >-
            The time at which the pickup will no longer be available for the day. Usually the closing time of the store/warehouse/office. In 4-digit military time format.

            <small>Example: 5:00 PM time becomes 1700 in military format.</small>
        pieces:
          type: integer
          format: int32
          example: 10
          description: The approximate number of pieces to be picked up.
        weight:
          type: number
          format: double
          example: 150.5
          description: The approximate total weight of the pickup.
        email:
          type: string
          nullable: true
          example: 'customer@example.com'
          description: The email to be notified of the pickup confirmation, as well as contact for additional pickup details.
        saveEmailAsDefault:
          type: boolean
          nullable: true
          example: true
          description: Indicates if the email should be saved as the default email address.
      additionalProperties: false
    PickupRequestRes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the pickup request.
          example: 134
        requestDateTime:
          type: string
          format: date-time
          description: The date and time when the pickup request was made.
          example: '2024-07-01T16:31:40.9603962+00:00'
        pickupTime:
          type: string
          nullable: true
          description: The scheduled time for the pickup.
          example: 0700
        closingTime:
          type: string
          nullable: true
          description: The closing time for the pickup location.
          example: 1700
        branchEmail:
          type: string
          nullable: true
          description: The email address of the branch handling the pickup request.
          example: HYZ_Pickups@ats.ca
        customerEmail:
          type: string
          nullable: true
          description: The email address of the customer requesting the pickup.
          example: john.doe@email.com
        shipmentDetail:
          "$ref": "#/components/schemas/PickupRequestShipmentDetailRes"
          description: Details of the shipment associated with the pickup request.
      additionalProperties: false
    PickupRequestShipmentDetailRes:
      type: object
      properties:
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
          example: 10
        weight:
          type: number
          format: double
          description: The total weight of the shipment.
          example: 150.5
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
          description: A URI reference that identifies the problem type.
        title:
          type: string
          nullable: true
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          format: int32
          nullable: true
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          nullable: true
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          nullable: true
          description: A URI reference that identifies the specific occurrence of the problem.
      additionalProperties: {}
    NotFoundResponse:
      type: object
      properties:
        type:
          type: string
          description: The type of error.
          example: https://tools.ietf.org/html/rfc7231#section-6.5.4
        title:
          type: string
          description: A short, human-readable summary of the problem.
          example: Not Found
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        traceId:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
          example: 00-b97c98f44be31b8594ba0715da119e06-b94062e99cad3610-00
    RateAdditionalChargeResponse:
      type: object
      properties:
        code:
          type: string
          example: DG
          nullable: true
          description: The code identifying the additional charge.
        name:
          type: string
          example: Dangerous Goods
          nullable: true
          description: The name of the additional charge.
        hasFlatCharge:
          type: boolean
          example: false
          description: Indicates if the charge is a flat rate.
        flatCharge:
          type: number
          format: double
          nullable: true
          description: The amount of the flat charge.
        variableCharge:
          type: number
          example: 25.0
          format: double
          nullable: true
          description: The amount of the variable charge.
        isPartiallyAvailable:
          type: boolean
          example: false
          nullable: true
          description: Indicates if the additional charge is partially available.
        partialAvailabilityDetails:
          type: string
          nullable: true
          description: Details about the partial availability of the additional charge.
      additionalProperties: false
    RateAddressRequest:
      required:
      - address1
      - city
      - country
      - postalCode
      - province
      type: object
      properties:
        address1:
          type: string
          description: The primary address line for the location.
        address2:
          type: string
          nullable: true
          description: The secondary address line for the location, if applicable.
        city:
          type: string
          description: The city in which the address is located.
        province:
          type: string
          description: The province or state in which the address is located.
        postalCode:
          type: string
          description: The postal code or ZIP code for the address.
        country:
          type: string
          description: The country in which the address is located.
        isResidential:
          type: boolean
          nullable: true
          description: Indicates if the address is residential.
      additionalProperties: false
    RateResponse:
      type: object
      properties:
        accessorials:
          type: array
          items:
            "$ref": "#/components/schemas/RateAdditionalChargeResponse"
          nullable: true
          description: A list of additional accessorial charges.
        surcharges:
          type: array
          items:
            "$ref": "#/components/schemas/RateAdditionalChargeResponse"
          nullable: true
          description: A list of additional surcharges.
        accessorialsTotal:
          type: number
          example: 25.0
          format: double
          description: The total amount of accessorial charges.
        surchargesTotal:
          type: number
          example: 0.0
          format: double
          description: The total amount of surcharges.
        fuelSurcharge:
          type: number
          example: 4.3989
          format: double
          description: The amount of the fuel surcharge.
        expectedFreightCharge:
          type: number
          example: 18.92
          format: double
          description: The expected freight charge before additional charges.
        totalBeforeTax:
          type: number
          example: 48.3189
          format: double
          description: The total amount before tax.
        taxes:
          type: number
          format: double
          example: 2.415945
          description: The total amount of taxes.
        total:
          type: number
          example: 50.734845
          format: double
          description: The total amount including all charges and taxes.
      additionalProperties: false
    RateShipmentRequestBody:
      required:
      - address
      - pieces
      - serviceCode
      - shipDate
      - totalWeight
      type: object
      properties:
        serviceCode:
          type: string
          description: The code for the type of service being requested.
        address:
          "$ref": "#/components/schemas/RateAddressRequest"
          description: The address details for the shipment.
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
        packages:
          type: array
          items:
            "$ref": "#/components/schemas/PackageRequest"
          nullable: true
          description: A list of packages included in the shipment.
        totalWeight:
          type: number
          format: double
          description: The total weight of the shipment.
        isPallet:
          type: boolean
          description: Indicates if the shipment is palletized.
        shipDate:
          type: string
          format: date-time
          description: The date and time when the shipment is to be shipped.
        shipmentTypeEnum:
          "$ref": "#/components/schemas/ShipmentTypeEnum"
          description: The type of shipment, either regular or return.
        selectedAccessorials:
          type: array
          items:
            type: string
          nullable: true
          description: A list of selected accessorial services for the shipment.
        declaredValue:
          type: number
          format: double
          nullable: true
          description: The declared value of the shipment for insurance purposes.
      additionalProperties: false
    ReferenceResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the reference.
        shortName:
          type: string
          nullable: true
          description: A short name or label for the reference.
        value:
          type: string
          nullable: true
          description: The value associated with the reference.
      additionalProperties: false
    Response:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Shipment"
          nullable: true
          description: The list of shipments returned in the response.
        pageNumber:
          type: integer
          format: int32
          nullable: true
          description: The current page number in the pagination.
        pageSize:
          type: integer
          format: int32
          nullable: true
          description: The number of items per page in the pagination.
        pageCount:
          type: integer
          format: int32
          description: The total number of pages in the result set.
        totalItemCount:
          type: integer
          format: int32
          description: The total number of items in the result set.
        isFirstPage:
          type: boolean
          description: Indicates if the current page is the first page.
        isLastPage:
          type: boolean
          description: Indicates if the current page is the last page.
        hasNextPage:
          type: boolean
          description: Indicates if there is a next page available.
        hasPreviousPage:
          type: boolean
          description: Indicates if there is a previous page available.
      additionalProperties: false
    Result:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Model"
          nullable: true
          description: The list of items returned in the result set.
        pageNumber:
          type: integer
          format: int32
          nullable: true
          description: The current page number in the pagination.
        pageSize:
          type: integer
          format: int32
          nullable: true
          description: The number of items per page in the pagination.
        pageCount:
          type: integer
          format: int32
          description: The total number of pages in the result set.
        totalItemCount:
          type: integer
          format: int32
          description: The total number of items in the result set.
        isFirstPage:
          type: boolean
          description: Indicates if the current page is the first page.
        isLastPage:
          type: boolean
          description: Indicates if the current page is the last page.
        hasNextPage:
          type: boolean
          description: Indicates if there is a next page available.
        hasPreviousPage:
          type: boolean
          description: Indicates if there is a previous page available.
      additionalProperties: false
    ServicesByDateResponse:
      type: object
      properties:
        date:
          type: string
          format: date-time
        services:
          type: array
          items:
            "$ref": "#/components/schemas/GroupedServiceResponse"
          nullable: true
      additionalProperties: false
    Shipment:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for the shipment.
        docketId:
          type: integer
          format: int32
          description: The identifier for the shipment docket.
        docketCode:
          type: string
          nullable: true
          description: The code associated with the shipment docket.
        addressId:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the address associated with the shipment.
        consigneeCode:
          type: string
          nullable: true
          description: The code for the consignee associated with the shipment.
        serviceCode:
          type: string
          nullable: true
          description: The code for the type of service used for the shipment.
        serviceText:
          type: string
          nullable: true
          description: A description of the type of service used for the shipment.
        address:
          "$ref": "#/components/schemas/AddressRequest"
          description: The address details for the shipment.
        pieces:
          type: integer
          format: int32
          description: The number of pieces in the shipment.
        totalWeight:
          type: number
          format: double
          description: The total weight of the shipment.
        shipDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the shipment was shipped.
        status:
          "$ref": "#/components/schemas/ShipmentStatus"
          description: The current status of the shipment.
        trackingNumber:
          type: string
          nullable: true
          description: The tracking number for the shipment.
        manifestId:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the shipment manifest.
        reference:
          type: string
          nullable: true
          description: The reference number for the shipment.
        po:
          type: string
          nullable: true
          description: The purchase order number for the shipment.
      additionalProperties: false
    ShipmentIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: A list of shipment IDs.
          items:
            type: integer
            format: int32
      additionalProperties: false
    ShipmentReference:
      required:
      - id
      - shortName
      - value
      type: object
      properties:
        id:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
          x-enumDescriptions:
            1: "Reference Number"
            2: "Purchase Order Number"
            3: "Customer Shipment Number"
            4: "Customer Manifest Number"
            5: "Bill Of Lading"
            6: "Consignee PO"
            7: "Shipper Reference"
            8: "Distribution Reference"
            9: "Product Number"
            10: "Carton ID"
            11: "Store"
            12: "Load ID"
            13: "Indigo HU Returns Type"
            14: "Delivery Order"
            15: "Barcode"
            16: "Credo Licence"
            17: "Agent Waybill"
            18: "Sub-Shipment"
            19: "Purchase Order Number - Special"
            20: "ASN"
            21: "Pickup Trailer â€“ Manifest Number"
            22: "RMA Number"
          description: The unique identifier for the shipment reference type.
        shortName:
          type: string
          enum:
            - REF
            - PO
            - CSN
            - CMN
            - BOL
            - CPO
            - SREF
            - DREF
            - PNO
            - CID
            - STO
            - LID
            - RTYPE
            - DO
            - BC
            - CLIC
            - AWB
            - SUBS
            - POS
            - ASN
            - PTMN
            - RMA
          x-enumDescriptions:
            REF: "Reference Number"
            PO: "Purchase Order Number"
            CSN: "Customer Shipment Number"
            CMN: "Customer Manifest Number"
            BOL: "Bill Of Lading"
            CPO: "Consignee PO"
            SREF: "Shipper Reference"
            DREF: "Distribution Reference"
            PNO: "Product Number"
            CID: "Carton ID"
            STO: "Store"
            LID: "Load ID"
            RTYPE: "Indigo HU Returns Type"
            DO: "Delivery Order"
            BC: "Barcode"
            CLIC: "Credo Licence"
            AWB: "Agent Waybill"
            SUBS: "Sub-Shipment"
            POS: "Purchase Order Number - Special"
            ASN: "ASN"
            PTMN: "Pickup Trailer â€“ Manifest Number"
            RMA: "RMA Number"
          description: The short name for the shipment reference type.
        value:
          maxLength: 24
          type: string
          description: The value associated with the shipment reference type.
      additionalProperties: false
    ShipmentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11036
          description: The unique identifier for the shipment.
        docketId:
          type: integer
          example: 97
          format: int32
          description: The identifier for the shipment docket.
        docketCode:
          type: string
          example: ATSDemo2
          nullable: true
        accountId:
          type: integer
          example: null
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
          deprecated: true
        accountCode:
          maxLength: 24
          example: null
          type: string
          description: This is the Shipper's Consignee Id that the Shipper would use
            to refer to this Consignee
          nullable: true
          deprecated: true
        consigneeId:
          type: integer
          example: null
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
          deprecated: true
        addressId:
          type: integer
          example: null
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
        consigneeCode:
          maxLength: 24
          example: null
          type: string
          description: This is the Shipper's Consignee Id that the Shipper would use
            to refer to this Consignee
          nullable: true
        serviceCode:
          type: string
          example: GE
          description: The code for the type of service used for the shipment.
          nullable: true
        serviceText:
          type: string
          example: Ground Expedited
          nullable: true
          description: A description of the type of service used for the shipment.
        address:
          "$ref": "#/components/schemas/AddressRequest"
        pieces:
          type: integer
          example: 5
          format: int32
          description: The number of pieces in the shipment.
        totalWeight:
          type: number
          example: 15
          format: double
          description: The total weight of the shipment.
        shipDate:
          type: string
          format: date-time
          example: '2024-07-03T10:00:00+00:00'
          nullable: true
          description: The date and time when the shipment was shipped.
        status:
          example: created
          "$ref": "#/components/schemas/ShipmentStatus"
        trackingNumber:
          type: string
          example: '800014422'
          nullable: true
          description: The tracking number for the shipment.
        manifestId:
          type: integer
          example: 1337
          format: int32
          nullable: true
          description: The identifier for the shipment manifest.
        reference:
          type: string
          nullable: true
          description: The reference number for the shipment.
        po:
          type: string
          nullable: true
          description: The purchase order number for the shipment.
        origin:
          "$ref": "#/components/schemas/Origin"
        destination:
          "$ref": "#/components/schemas/Destination"
        phone:
          type: string
          nullable: true
          example: 123-456-7890
          description: The phone number associated with the shipment.
        email:
          type: string
          example: john.doe@ats.ca
          nullable: true
          description: The email address associated with the shipment.
        descriptionOfGoods:
          type: string
          example: Medical supplies
          nullable: true
          description: A description of the goods in the shipment.
        instructions:
          type: string
          example: Handle with care
          nullable: true
          description: Special instructions for the shipment.
        packages:
          type: array
          items:
            "$ref": "#/components/schemas/PackageResponse"
          nullable: true
        references:
          type: array
          items:
            "$ref": "#/components/schemas/ReferenceResponse"
          nullable: true
        isPallet:
          type: boolean
          example: false
          description: Indicates if the shipment is palletized.
        saidToContain:
          type: integer
          format: int32
          nullable: true
          description: The number of items the shipment is said to contain.
        accessorials:
          "$ref": "#/components/schemas/AccessorialsRes"
        rate:
          "$ref": "#/components/schemas/RateResponse"
        paymentTerm:
          "$ref": "#/components/schemas/PaymentTermsClass"
        paymentAccount:
          type: integer
          format: int32
          description: The payment account associated with the shipment.
          nullable: true
      additionalProperties: false
    ShipmentResponseLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        docketId:
          type: integer
          format: int32
        docketCode:
          type: string
          nullable: true
        accountId:
          type: integer
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
          deprecated: true
        accountCode:
          maxLength: 24
          type: string
          description: This is the Shipper's Consignee Id that the Shipper would use
            to refer to this Consignee
          nullable: true
          deprecated: true
        consigneeId:
          type: integer
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
          deprecated: true
        addressId:
          type: integer
          description: This is the saved address id in ATS System used to associate
            shipments to a saved address
          format: int32
          nullable: true
        consigneeCode:
          maxLength: 24
          type: string
          description: This is the Shipper's Consignee Id that the Shipper would use
            to refer to this Consignee
          nullable: true
        serviceCode:
          type: string
          nullable: true
        serviceText:
          type: string
          nullable: true
        address:
          "$ref": "#/components/schemas/AddressRequest"
        pieces:
          type: integer
          format: int32
        totalWeight:
          type: number
          format: double
        shipDate:
          type: string
          format: date-time
          nullable: true
        status:
          "$ref": "#/components/schemas/ShipmentStatus"
        trackingNumber:
          type: string
          nullable: true
        manifestId:
          type: integer
          format: int32
          nullable: true
        reference:
          type: string
          nullable: true
        po:
          type: string
          nullable: true
        origin:
          "$ref": "#/components/schemas/Origin"
        destination:
          "$ref": "#/components/schemas/Destination"
      additionalProperties: false
    ShipmentServiceType:
      enum:
      - notSpecified
      - ground
      - air
      - us
      - truckload
      - international
      type: string
    ShipmentsResponse:
      type: object
      properties:
        totals:
          "$ref": "#/components/schemas/ShipmentsTotals"
        shipments:
          type: array
          items:
            "$ref": "#/components/schemas/ShipmentResponseLite"
          nullable: true
      additionalProperties: false
    ShipmentsResponsePagedResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/ShipmentsResponse"
        pageNumber:
          type: integer
          format: int32
          nullable: true
        pageSize:
          type: integer
          format: int32
          nullable: true
        pageCount:
          type: integer
          format: int32
        totalItemCount:
          type: integer
          format: int32
        isFirstPage:
          type: boolean
        isLastPage:
          type: boolean
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
      additionalProperties: false
    ShipmentStatus:
      enum:
      - staged
      - created
      - manifested
      - voided
      type: string
      description: The current status of the shipment.
    ShipmentsTotals:
      type: object
      properties:
        created:
          type: integer
          format: int32
          description: The total number of shipments created.
        createdWithTodaysShipDate:
          type: integer
          format: int32
          description: The total number of shipments created with today's ship date.
      additionalProperties: false
    ShipmentTypeEnum:
      enum:
      - regular
      - return
      type: string
      description: The type of shipment, either regular or return.
    ShipToAddressConfigRes:
      type: object
      properties:
        fieldConfigs:
          "$ref": "#/components/schemas/FieldConfigsRes"
      additionalProperties: false
    SortBy:
      enum:
      - id
      - shipDate
      - name
      - docketCode
      - pieces
      - totalWeight
      - serviceCode
      - accountCode
      - fromAccountCode
      - consigneeCode
      - attentionTo
      - address1
      - address2
      - city
      - province
      - postalCode
      - country
      - trackingNumber
      - status
      - reference
      - po
      type: string
    SortBy_v1_2:
      enum:
      - id
      - shipDate
      - name
      - docketCode
      - pieces
      - totalWeight
      - serviceCode
      - consigneeCode
      - attentionTo
      - address1
      - address2
      - city
      - province
      - postalCode
      - trackingNumber
      - status
      - reference
      - po
      type: string
    Source:
      enum:
      - wineDirect
      type: string
    TimeReleaseDetailRes:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/TimeReleaseTypeRes"
        date1:
          type: string
          format: date-time
          nullable: true
          description: The first date associated with the time release.
        date2:
          type: string
          format: date-time
          nullable: true
          description: The second date associated with the time release, if applicable.
      additionalProperties: false
    TimeReleaseDetails:
      required:
      - date1
      - type
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/TimeReleaseTypeReq"
          description: The type of time release associated with the shipment.
        date1:
          type: string
          format: date-time
          description: The first date associated with the time release.
        date2:
          type: string
          format: date-time
          nullable: true
          description: The second date associated with the time release. Required if `type.value` is `deliverBetween`.
      additionalProperties: false
    TimeReleaseType:
      enum:
      - deliverBefore
      - deliverAfter
      - deliverOn
      - deliverBetween
      type: string
      description: The type of time release for the delivery, indicating whether the delivery should occur before, after, on, or between specific dates.
    TimeReleaseTypeReq:
      type: object
      properties:
        value:
          "$ref": "#/components/schemas/TimeReleaseType"
        description:
          type: string
          nullable: true
          description: A description of the time release type.
      additionalProperties: false
    TimeReleaseTypeRes:
      description: The type of time release associated with the shipment.
      type: object
      properties:
        value:
          "$ref": "#/components/schemas/TimeReleaseType"
          description: The value of the time release type.
        description:
          description: A description of the time release type.
          type: string
          nullable: true
      additionalProperties: false
    UpdateManifestRequest:
      type: object
      required:
        - status
      properties:
        pickupDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the pickup is scheduled.
        door:
          type: string
          nullable: true
          description: The door number where the pickup will occur.
        trailerNumber:
          type: string
          nullable: true
          description: The trailer number associated with the manifest.
        name:
          type: string
          nullable: true
          description: The name of the manifest.
        status:
          default: closed
          "$ref": "#/components/schemas/ManifestStatusReq"
      additionalProperties: false
    ValidatePostalCodeResponse:
      type: object
      properties:
        isValid:
          type: boolean
          description: Indicates if the postal code is valid.
        isValidPostalCode:
          type: boolean
          description: Indicates if the provided postal code is valid.
        isValidCity:
          type: boolean
          description: Indicates if the provided city is valid for the postal code.
        isValidProvince:
          type: boolean
          description: Indicates if the provided province is valid for the postal code.
        isValidProvincePostalCodeCombo:
          type: boolean
          description: Indicates if the combination of province and postal code is valid.
        city:
          type: string
          nullable: true
          description: The city associated with the postal code, if valid.
        province:
          type: string
          nullable: true
          description: The province associated with the postal code, if valid.
        cities:
          type: array
          items:
            type: string
          nullable: true
          description: A list of possible cities for the given postal code.
      additionalProperties: false
    ContinuousManifestRes:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the continuous manifest.
          example: 504
        dateCreated:
          type: string
          format: date-time
          description: The date and time when the manifest was created.
          example: 2023-10-03T23:24:36.8083692+00:00
        dateClosed:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the manifest was closed.
          example: null
        name:
          type: string
          nullable: true
          description: The name associated with the manifest.
          example: null
        status:
          type: string
          description: The status of the manifest.
          example: open
        pickupDate:
          type: string
          format: date-time
          nullable: true
          description: The scheduled pickup date for the manifest.
          example: null
        door:
          type: string
          nullable: true
          description: The door assigned for the pickup.
          example: null
        trailerNumber:
          type: string
          nullable: true
          description: The trailer number associated with the manifest.
          example: null
        shipmentsAssigned:
          type: integer
          description: The number of shipments assigned to the manifest.
          example: 0
        isContinuousType:
          type: boolean
          description: Indicates if the manifest is of continuous type.
          example: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.ats.healthcare/oauth2/aus681w39m699cyHD5d7/v1/authorize
          tokenUrl: https://login.ats.healthcare/oauth2/aus681w39m699cyHD5d7/v1/token
          scopes:
            Api.Read.All: Access all read operations
            Api.Write.All: Access all write operations
security:
- oauth2:
  - App.Read.All
  - App.Write.All

